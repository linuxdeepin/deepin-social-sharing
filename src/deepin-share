#! /usr/bin/env python
# -*- coding: utf-8 -*-

# Copyright (C) 2014 ~ 2015 Deepin, Inc.
#               2014 ~ 2015 Wang Yaohua
#
# Author:     Wang Yaohua <mr.asianwang@gmail.com>
# Maintainer: Wang Yaohua <mr.asianwang@gmail.com>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

import os
import sys
import signal

from PyQt5.QtCore import Qt, QUrl
from PyQt5.QtQuick import QQuickView
from PyQt5.QtGui import QSurfaceFormat, QColor
from PyQt5.QtWidgets import QApplication
app = QApplication(sys.argv)

from accounts_manager import AccountsManager
from dbus_services import DBUS_NAME, DBUS_PATH
from dbus_services import DeepinShareServiceAdaptor, session_bus

class ShareWindow(QQuickView):
    def __init__(self):
        super(ShareWindow, self).__init__()
        self._accounts_manager = AccountsManager()
        self._adapter = DeepinShareServiceAdaptor(self)

        surface_format = QSurfaceFormat()
        surface_format.setAlphaBufferSize(8)

        self.setColor(QColor(0, 0, 0, 0))
        self.setFlags(Qt.FramelessWindowHint)
        self.setResizeMode(QQuickView.SizeViewToRootObject)
        self.setFormat(surface_format)

        self.rootContext().setContextProperty("_accounts_manager",
                                              self._accounts_manager)

        parentDir = os.path.dirname(os.path.abspath(__file__))
        qmlDir = os.path.join(os.path.dirname(parentDir), "qmls")
        qmlPath = os.path.join(qmlDir, "Share.qml")
        self.setSource(QUrl.fromLocalFile(qmlPath))

    def share(self, text, picture):
        self.rootObject().setText(text)
        self.rootObject().setScreenshot(picture)
        self.show()

if __name__ == "__main__":
    window = ShareWindow()
    window.show()

    session_bus.registerService(DBUS_NAME)
    session_bus.registerObject(DBUS_PATH, window)

    signal.signal(signal.SIGINT, signal.SIG_DFL)
    sys.exit(app.exec_())
